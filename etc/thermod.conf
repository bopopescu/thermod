# Thermod configuration file
#
# All values must be written without quotes and are case sensitive.
# After editing this file, the daemon must be restarted! The SIGHUP signal
# can be used only for reloading the timetable JSON file.
#

[global]
enabled = false
debug = false
timetable = /etc/thermod/timetable.json
interval = 30

[heating]
# How to manage the heating. The heating can be managed with external scripts
# or using internal functions for Raspberry Pi hardware. The following option
# can have only two values: 'scripts' or 'PiPinsRelay'.
heating = scripts

[heating/scripts]
# Full path to heating scripts: one to switch on the heating, one to switch if
# off and the last one to query the current status.
# See `samples` folder for some example scripts.
# Required only if 'heating = scripts'.
switchon = /etc/thermod/switch-heating --on -j -s -q
switchoff = /etc/thermod/switch-heating --off -j -s -q
status = /etc/thermod/switch-heating --status -j -s -q

[heating/PiPinsRelay]
# List of BCM GPIO pins (comma separated) connected to the heating.
# Required only if 'heating = PiPinsRelay'.
pins = 22

# Trigger level for selected GPIO pins to switch on the heating. Two values
# are valid: high or low (case insensitive). The other level is to switch off.
# Required only if 'heating = PiPinsRelay'.
switch_on_level = low

[thermometer]
# Full path to an external script (that return the current temperature) or
# the value 'PiAnalogZero' if the temperature is retrieved from an AnalogZero
# board connected to a Raspberry Pi.
# See `samples` folder for a example script
thermometer = /etc/thermod/get-temperature

[thermometer/PiAnalogZero]
# Comma-separated list of AnalogZero A/D channels to read temperature from.
# Required only if 'thermometer = PiAnalogZero'.
channels = 0, 1, 2

# The temperature returned by the AnalogZero board can be calibrated adjusting
# the following options, the resulting temperature will be:
#     final_temperature = (multiplier * board_temperature) + shift
# Any float value can be used, the default are 1 for multiplier and 0 for shift.
# Required only if 'thermometer = PiAnalogZero'.
multiplier = 1
shift = 0

[socket]
# leave `host` empty if you want the socket to listen on any interface
host = localhost
port = 4344

[email]
# The `server` parameter can be empty to disable email alert or can be the
# hostname of the SMTP mail server (optianally followed by port numer
# like hostname:port). If required fill the `user` and `password` fields for
# mail server. The `sender` is the full email of the sender address.
server = localhost
user = 
password = 
sender = Thermod <root@localhost>
subject = Thermod alert

[email/rcpt]
# Recipients of notification emails. Add one recipient per line, the name on
# the left side of the equal sign must be unique, otherwise the daemon will
# not start.
admin = Simone Rossetto <root@localhost>
other = other@localhost
